/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package recuperationtraces;

import java.io.BufferedReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import sakdavong.communicationserveur.CommunicationServer;

/**
 *
 * @author Tigro
 * 
 * 
 * cette classe permet de recuperer les trace et les mettre dans une HashMap
 * 
 */
public class RecupTrace  extends javax.swing.JDialog{
    
    /**
     * Create new form RecupTrace
     */
    IndicateursImpl traces ;
    
    public RecupTrace(javax.swing.JFrame parent, boolean modal, Racine r) {
        super(parent, modal);
        traces = new IndicateursImpl(r);
        
        initComponents();
        setModal(modal);
        setVisible(true);
    }

    public IndicateursImpl getTraces() {
        return traces;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        auteurs = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        trace = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(2, 0));

        jLabel2.setText("Logins:");

        auteurs.setText("avrilmai2014_*");
        auteurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                auteursActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(jLabel2)
                .addGap(41, 41, 41)
                .addComponent(auteurs, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(auteurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3);

        trace.setText("manip1_carte4.trc");

        jLabel3.setText("Trace:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addComponent(jLabel3)
                .addGap(45, 45, 45)
                .addComponent(trace, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Récupération des traces");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jButton1.setText("Voir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton2.setText("Quitter");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        this.dispose();
    }                                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        try {
            //buffer qui stocke temporairement les logins 
            BufferedReader br = CommunicationServer.receiveLogins(auteurs.getText());
            List<String> listeLogins = new ArrayList();
            //parcours du buffer et stockage des logins dans la liste
            while (br.ready())
            {
                listeLogins.add(br.readLine());
                
            }
            //on remplit la premiere ligne de la HashMap avec une liste vide et une clé "Nom"
            traces.getTr().put("Nom", new ArrayList<String>());           

            int index=0;
            //parcours de la liste de logins 
            for (String login: listeLogins)
            {
               
                try
                {
                    //buffer qui stocke temporairement les données du participant
                    BufferedReader brf = CommunicationServer.receive(login, trace.getText(), "", "", "", "", "");
                    
                    if (brf!=null){
                        // System.out.println("====> Traitement du login "+login);
                        if (brf.ready()){
                            traces.getTr().get("Nom").add(login);

                            List<String> listeCleFichier = new ArrayList();
                            while (brf.ready())
                            {
                                //récupere les indicateurs un par un (ligne par ligne)
                                String line = brf.readLine();
                                //System.out.println("                                                    "+line);

                                //index du # qui sépare le nom d'indicateur et sa valeur
                                int pos = line.indexOf("#");

                                //récupère le nom d'indicateur et sa valeur dans deux variables
                                String indicateur = line.substring(0,pos);
                                String val = line.substring(pos+1);

                                //on ajoute chaque indicateur présent dans le fichier a la liste
                                listeCleFichier.add(indicateur);

                                //si la HashMap ne contient pas déjà l'indicateur
                                if (!traces.getTr().containsKey(indicateur)){
                                    //on l'ajoute avec une liste vide en valeur
                                    traces.getTr().put(indicateur, new ArrayList<String>());

                                    //si on n'est pas sur le premier participant
                                    //on remplit les valeurs des anciens participants qui n'ont pas cet indicateur à ""  
                                    for(int i=0; i<index; i++){
                                        traces.getTr().get(indicateur).add(""); 
                                    }
                                }   

                                //si la HashMap contient déjà l'indicateur on rajoute juste la valeur
                                //si la valeur est nulle, on met chaine vide ""
                                if ( val==null ){
                                    traces.getTr().get(indicateur).add("");
                                } else {
                                    //sinon on rentre la valeur
                                    traces.getTr().get(indicateur).add(val);
                                }
                            //on passe à la ligne suivante : l'indicateur suivant
                            }

                        //on vérifie que tout les indicateurs présents dans la HashMap sont bien présent dans le fichier
                        //pour être sur que les valeurs ne seront pas décalé si l'indicateur n'existe pas 
                        for (String key : traces.getTr().keySet()) {
                            if (!key.equals("Nom")){
                                boolean b = false;
                                for (String indFich : listeCleFichier){
                                    //si l'indicateur est dans le fichier : pas de probleme
                                    if (key.equals(indFich)){
                                        b=true;
                                    }

                                }
                                //l'indicateur n'est pas présent dans le fichier, on lui affecte une valeur nulle dans la HashMap
                                if (b==false){
                                    traces.getTr().get(key).add("");
                                }
                            }
                        }
                        index++;
                        //on passe au participant suivant
                        //System.out.println("Utilisateur suivant : "+index);  
                        }
                    } 

              } catch (java.net.SocketException e) {
                  System.out.println("CARTE ABSENTE");
              }
                
            }
            traces.afficher();
            System.out.println("taille des logins : "+traces.getTr().get("Nom").size());
            System.out.println("taille d'un indicateur : "+traces.getTr().get("manip1_carte2/BcA2Apres").size());
            System.out.println("taille d'un indicateur : "+traces.getTr().get("manip1_carte2/apres/NoteQCM_q2").size());
           
        } catch (IOException ex) {
            System.out.println("IOException");
        }
    }                                        

    private void auteursActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }
    

    // Variables declaration - do not modify                     
    private javax.swing.JTextField auteurs;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField trace;
    // End of variables declaration                   
}